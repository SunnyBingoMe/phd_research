Tue Oct  4 12:15:33 PDT 2016

The Wikipedia article on traffic simulation is helpful, as is the monograph
from ECI 256, although the latter is a bit dated.

microscopic- studies in great detail, like the dynamics of a lane change.

## MATSIM- multi agent transport simulation

Been looking through the MATSIM software which does agent based
simulations.  First impression is that it's large, sophisticated, and
mature.  It simulates a day with as many as 10 million individual people
making their own transportation choices, which is enough for most large
cities. It is Java based and uses multiple threads. Seems like a fair
amount of attention has been put into the design and performance. But it
doesn't seem to do much with statistics.

I didn't realize that such tools existed.

But this might be good for me- I thought that I would have to write my own
simulations. If these already exist then I can focus on the data that
they're consuming and producing. Looks like the company
[via](http://via.senozon.com/) already has a nice commercial project
handling the visualization.

# Notes from reading docs

Meters are the most commonly used distance unit. Cartesian coordinates
rather than GPS are used for speed.

Generating `population.xml` looks extremely interesting. This is the list
of agents and their day plans. How can we make valid simulations from
something like US Census data?

Most referenced simulations run with on the order of 5
million agents and networks with ~ 20K nodes / 40K links.

Rieser's 2007 paper describes alternating mental layer / physical layer to
converge to "optimal" travel plan solution. Takes about 80 iterations to
"converge" in example. Each iteration takes around an hour, so the whole
thing runs in 2 - 6 days in Balmer's 2008 MatSim-T "Architecture and Simulation
Times" paper.

### Parameters

Together there are 24 different modules containing an aggregated total of
242 parameters.

```
<!-- The type of routing (least cost path) algorithm used, may have the values:
Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
<param name="routingAlgorithmType" value="Dijkstra" />
```

Are there fast stochastic or probabalistic routing algorithms? It seems like
these could just plugged in to the framework to try new things. Although I
may have to implement them in Java.


